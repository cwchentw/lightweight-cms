#!/bin/sh
#
# Compile a static Lightweight site.


# Check whether PHP is available on the system.
if ! command -v php 2>&1 1>/dev/null;
then
    echo "No PHP on the system" >&2;
    exit 1;
fi

# Get an address.
address=$1;
if [ -z "$address" ];
then
    address="localhost:5000";
fi

cwd=$(dirname $0);
bin="${cwd}/../bin";
lib="${cwd}/../lib";
libexec="${cwd}/../libexec";

# Generate site settings if it doesn't exist.
if ! [ -f "${lib}/settings.sh" ];
then
    "${bin}/init" > "${lib}/settings.sh" || (
        exit $?;
    )
fi

# Load site settings.
. "${lib}/settings.sh";

# Download third-party PHP packages if they don't exist.
if ! [ -d "${root}/vendor" ];
then
    if [ "$(id -u)" -eq 0 ];
    then
        echo "Install PHP packages with Composer by a normal user" >&2;
        exit 1;
    fi

    # Check whether Composer is available on the system.
    if ! command -v composer 2>&1 1>/dev/null;
    then
        echo "No Composer on the system" >&2
        exit 1;
    fi

    composer install --no-dev || (
        exit $?;
    )
fi

# Create a 404.html
"${bin}/404" || (
    exit $?;
)

# Create a 50x.html
"${bin}/50x" || (
    exit $?;
)

# Create an offline.html
"${bin}/offline" || (
    exit $?;
)

# Create a manifest.json
"${bin}/manifest" || (
    exit $?;
)

# Create a sitemap.xml
"${bin}/sitemap" || (
    exit $?;
)

# Create a rss.xml
"${bin}/rss" || (
    exit $?;
)

# Load assets.
"${bin}/assets" || (
    exit $?;
)

# Load personal assets.
"${bin}/site-assets" || (
    exit $?;
)

# Create assets.
#npm install

# Copy static files.
cp -pr "${static}/"* "$public" || (
    echo "Unable to copy static files to the public directory" >&2;
    exit 1;
)

# Compile a Lightweight site.
php "${libexec}/compile.php"
